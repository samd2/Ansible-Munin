#!/bin/sh
# -*- sh -*-

# shellcheck disable=SC2046

: << =cut

=head1 NAME

memory_full - Plugin to measure memory on osx.

=head1 NOTES

This plugin runs the top command once per interval, to discover memory usage on OSX.
Contributions are welcome to collect additional memory regions, if possible, such as buffers and caches.

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf

=cut

if [ "$1" = "autoconf" ]; then
    if [ "$(uname)" = "Darwin" ]; then
        echo yes
        exit 0
    else
        echo "no (uname does not report 'Darwin')"
        exit 0
    fi
fi

dehumanise() {
    echo "$1" | sed -e "s/K/*1024/g;s/M/*1024*1024/;s/G/*1024*1024*1024/;s/T/*1024*1024*1024*1024/"
}

if [ "$1" = "config" ]; then
        echo 'graph_title Memory Full'
        echo "graph_order used wired unused swap_used swap_free"
        echo "graph_args --base 1024 -r --lower-limit 0"
        echo 'graph_vlabel Bytes'
        echo 'graph_category system'
        echo 'used.label used (not incl. wired)'
        echo 'used.draw AREA'
        echo 'used.min 0'
        echo "used.info Used memory, not including wired"
        echo 'wired.label wired'
        echo 'wired.draw STACK'
        echo 'wired.min 0'
        echo 'wired.info Wired memory'
        echo 'unused.label unused'
        echo 'unused.draw STACK'
        echo 'unused.min 0'
        echo 'unused.info Unused memory'
        echo 'swap_used.label swap_used'
        echo 'swap_used.draw STACK'
        echo 'swap_used.min 0'
        echo 'swap_used.info Swap used'
        echo 'swap_free.label swap_free'
        echo 'swap_free.draw STACK'
        echo 'swap_free.min 0'
        echo 'swap_free.info Swap free'

        exit 0
fi

TOPINFO=$(top -l 1 | grep "PhysMem: ")
MEM_USED=$(echo "$TOPINFO" | awk '/PhysMem: / { print substr($2, 1, length($2)) }')
MEM_WIRED=$(echo "$TOPINFO" | awk '/PhysMem: / { print substr($4, 2, length($4)-1) }') 
MEM_UNUSED=$(echo "$TOPINFO" | awk '/PhysMem: / { print substr($6, 1, length($6)) }') 
SWAPINFO=$(sysctl vm.swapusage)
SWAP_USED=$(echo "$SWAPINFO" | awk '/vm.swapusage: / { print substr($7, 1, length($7)) }')
SWAP_FREE=$(echo "$SWAPINFO" | awk '/vm.swapusage: / { print substr($10, 1, length($10)) }')
echo "used.value" $(( $(dehumanise "$MEM_USED") - $(dehumanise "$MEM_WIRED") ))
echo "wired.value" $(( $(dehumanise "$MEM_WIRED") ))
echo "unused.value" $(( $(dehumanise "$MEM_UNUSED") ))
echo "swap_used.value" $( echo $(dehumanise "$SWAP_USED") | bc )
echo "swap_free.value" $( echo $(dehumanise "$SWAP_FREE") | bc )
